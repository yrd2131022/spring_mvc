<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1" metadata-complete="true">

	<display-name>Archetype Created Web Application</display-name>

	<!-- 配置监听器 ,监听器是自己写的，实际开发中不用自己写 -->
	<!-- <context-param> -->
	<!-- <param-name>contextConfigLocation</param-name> -->
	<!-- <param-value>applicationContext.xml</param-value> -->
	<!-- </context-param> -->
	<!-- <listener> -->
	<!-- <listener-class>com.yrd.spring_mvc.my_listener.ContextLoaderListener</listener-class> -->
	<!-- </listener> -->






	<!--====start====监听器配置， spring集成的，只要配置就能用。要配置下面两步 -->

	<!-- 应用上下文配置文件,下面是其他人写的classpath:Spring*.xml -->
	<!-- <context-param> -->
	<!-- <param-name>contextConfigLocation</param-name> -->
	<!-- <param-value>classpath:Spring*.xml</param-value> -->
	<!-- </context-param> -->

	<!-- “加载applicationContext.xml配置文件” -->
	<!-- 用法：在web层直接调用：ApplicationContext applicationContext = WebApplicationContextUtils.getWebApplicationContext(servletContext); -->
	<!-- 全局初始化参数 spring-web中的 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value><!-- 工程中的spring配置文件 -->
	</context-param>

	<!-- Bootstraps the root web application context before servlet initialization -->
	<!-- 配置监听器 spring-web中的，需要全局参数：contextConfigLocation -->
	<!-- 在监听器中加载applicationContext.xml，创建spring容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--====end====监听器配置， spring集成的，只要配置就能用 -->




	<!-- ====start===== 配置SpringMVC的前端控制器================ -->
	<servlet>
		<!-- 配置前端过滤器 -->
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<!-- 初始化时加载配置文件:spring_mvc.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<!-- 表示容器在启动时立即加载 Servlet -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<!-- 映射地址 -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- ====end===== 配置SpringMVC的前端控制器 -->



	<!-- ====start=====SpringMVC中解决表单提交时，后台出现中文乱码问题====== -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ====end=====SpringMVC中解决表单提交时，后台出现中文乱码问题====== -->


	<servlet>
		<servlet-name>userServlet</servlet-name>
		<servlet-class>com.yrd.spring_mvc.web.UserServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>userServlet</servlet-name>
		<url-pattern>/userServlet</url-pattern>
	</servlet-mapping>



</web-app>
